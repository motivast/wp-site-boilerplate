<?xml version="1.0" encoding="UTF-8"?>

<project name="WP Site Boilerplate" default="build">

	<!-- ============================================  -->
	<!-- Target: dotenv                                -->
	<!-- ============================================  -->
	<target name="dotenv" description="Load environmental variables from .env file.">
		<echo msg="Load .env file if exists" />

		<property file=".env" />

		<resolvepath propertyName="WP_PATH" file="${WP_PATH}"/>
	</target>

	<!-- ============================================  -->
	<!-- Target: wp:db:create                          -->
	<!-- ============================================  -->
	<target name="wp:db:create" depends="dotenv" description="Create WordPress database.">
		<echo msg="Create WordPress database" />

		<exec command="./vendor/bin/wp db create --path=${WP_PATH} --allow-root" passthru="true" checkreturn="false" />
	</target>

	<!-- ============================================  -->
	<!-- Target: wpremovedatabase                      -->
	<!-- ============================================  -->
	<target name="wp:db:drop" depends="dotenv" description="Drop WordPress database.">
		<echo msg="Drop WordPress database" />

		<exec command="./vendor/bin/wp db drop --yes --path=${WP_PATH} --allow-root" passthru="true" checkreturn="false" />
	</target>

	<!-- ============================================  -->
	<!-- Target: wp:download						   -->
	<!-- ============================================  -->
	<target name="wp:download" depends="dotenv" description="Download WordPress.">
		<echo msg="Download WordPress ${WP_VERSION}" />

		<!-- Enviroment variables are loaded by dotenv target -->
		<exec command="./vendor/bin/wp core download --version=${WP_VERSION} --path=${WP_PATH} --locale=${WP_LOCALE} --skip-content --allow-root --force" passthru="true" />
	</target>

	<!-- ============================================  -->
	<!-- Target: wpconfig                              -->
	<!-- ============================================  -->
	<target name="wp:config" depends="dotenv" description="Generate WordPress wp-config.php.">
		<echo msg="Generate WordPress wp-config.php" />

		<!-- Enviroment variables are loaded by dotenv target -->
		<exec command="./vendor/bin/wp core config --dbname=${WP_CONFIG_DB_NAME} --dbuser=${WP_CONFIG_DB_USER} --dbpass=${WP_CONFIG_DB_PASS} --dbhost=${WP_CONFIG_DB_HOST} --extra-php=${WP_CONFIG_EXTRA} --path=${WP_PATH} --allow-root --skip-check --force" passthru="true" />
	</target>

	<!-- ============================================  -->
	<!-- Target: wpinstall                             -->
	<!-- ============================================  -->
	<target name="wp:install" depends="dotenv" description="Generate WordPress wp-config.php.">
		<echo msg="Install WordPress" />

		<exec command="./vendor/bin/wp core install --url=${WP_URL} --title=${WP_TITLE} --admin_user=${WP_ADMIN_USER} --admin_password=${WP_ADMIN_PASS} --admin_email=${WP_ADMIN_EMAIL} --path=${WP_PATH} --allow-root" passthru="true" checkreturn="true" />
	</target>

	<!-- ============================================  -->
	<!-- Target: wp:plugins                             -->
	<!-- ============================================  -->
	<target name="wp:plugins" depends="dotenv" description="Activate installed plugins..">
		<echo msg="Activate plugins" />

		<exec command="./vendor/bin/wp plugin activate `./vendor/bin/wp plugin list --status=inactive --format=csv --path=${WP_PATH} --allow-root | cut -d',' -f1 | tail -n +2 | tr '\n' ' '` --path=${WP_PATH} --allow-root" passthru="true" checkreturn="true" />
	</target>

	<!-- ============================================  -->
	<!-- Target: wp:init                               -->
	<!-- ============================================  -->
	<target name="wp:init" description="Initialize WordPress. Execute wp:download, wp:config, wp:db:create, wp:install.">
		<echo msg="Init WordPress" />

		<phingcall target="wp:download" />
		<phingcall target="wp:config" />
		<phingcall target="wp:db:create" />
		<phingcall target="wp:install" />
	</target>

	<!-- ============================================  -->
	<!-- Target: wp:reset                              -->
	<!-- ============================================  -->
	<target name="wp:reset" description="Reset WordPress. Execute wp:download, wp:config, wp:db:drop, wp:db:create, wp:install.">
		<echo msg="Reset WordPress" />

		<phingcall target="wp:download" />
		<phingcall target="wp:config" />
		<phingcall target="wp:db:drop" />
		<phingcall target="wp:db:create" />
		<phingcall target="wp:install" />
	</target>

	<!-- ============================================  -->
	<!-- Target: changelog                             -->
	<!-- ============================================  -->
	<target name="changelog" depends="dotenv" description="Generate changelog based on github pull request labels.">

		<echo msg="Generate changelog based on github pull request labels" />
		<exec command="github_changelog_generator --user motivast --project motiforms --header-label '# Changelog' --enhancement-label '### Added' --bugs-label '### Fixed'" passthru="true" checkreturn="true" />
	</target>

</project>
